// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.FavoriteComic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComicDescription")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Descripcion_Comic");

                    b.Property<int>("ComicId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Comic");

                    b.Property<string>("ComicImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Url_Comic_Imagen");

                    b.Property<string>("ComicTitle")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Titulo_Comic");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Usuario");

                    b.HasKey("Id")
                        .HasName("PK_Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comic_Favorito", "dbo");
                });

            modelBuilder.Entity("Domain.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Correo");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Identificacion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Contrasena");

                    b.HasKey("UserId")
                        .HasName("PK_Usuario");

                    b.ToTable("Usuario", "dbo");
                });

            modelBuilder.Entity("Domain.Entity.FavoriteComic", b =>
                {
                    b.HasOne("Domain.Entity.User", "NaviUser")
                        .WithMany("FavoriteComics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Comic_Favorito_Usuarios");

                    b.Navigation("NaviUser");
                });

            modelBuilder.Entity("Domain.Entity.User", b =>
                {
                    b.Navigation("FavoriteComics");
                });
#pragma warning restore 612, 618
        }
    }
}
